{"version":3,"sources":["GlobalStyle.js","Header/styled.js","Header/Header.js","Form/styled.js","Form/Form.js","Section/styled.js","Section/Section.js","Container/styled.js","Buttons/styled.js","Buttons/Buttons.js","Task/styled.js","Task/Tasks.js","useTasks.js","useLocalStorageState.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","Name","styled","h1","theme","color","black","white","Header","title","StyledForm","form","breakpoint","horizontal","Input","input","gray","Button","button","teal","lightTeal","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","current","focus","value","onChange","target","placeholder","ref","StyledSection","section","StyledHeaderContainer","div","StyledTitle","h2","Section","body","extraHeaderContent","StyledContainer","main","StyledButtons","darkTeal","gallery","Buttons","tasks","hideDone","toggleHideDone","setAllDone","length","onClick","disabled","every","done","StyledTasks","ul","Item","li","lightGray","hidden","css","TasksButton","remove","red","toggleDone","green","Content","p","Tasks","toggleTaskDone","removeTask","map","task","id","content","useTasks","keyName","initialValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","useLocalStorageState","setTasks","filter","App","setHideDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","mobile","document","getElementById"],"mappings":"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","file":"static/js/main.7643963f.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n\n}\n\n*, ::before, ::after {\n  box-sizing: inherit;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    background-color:#eee\n}\n\n`;","import styled from \"styled-components\";\n\nexport const Name = styled.h1`\n  color:${({theme}) =>theme.color.black};\n  margin-top: 2px;\n  margin-bottom: 2px;\n  padding: 20px;\n  background-color: ${({theme}) =>theme.color.white};\n`;\n","import React from \"react\";\nimport { Name } from \"./styled\";\n\nexport const Header = ({ title }) => {\n  return <Name>{title}</Name>;\n};\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  background: ${({ theme }) => theme.color.white};\n  padding: 15px 15px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Input = styled.input`\n  flex-grow: 0.8;\n  padding: 10px;\n  height: 40px;\n  margin-right: 10px;\n  border: 1px solid ${({ theme }) => theme.color.gray};\n  padding: 0px 10px;\n`;\n\nexport const Button = styled.button`\n  color: ${({ theme }) => theme.color.white};\n  border: 1px solid ${({ theme }) => theme.color.teal};\n  background: ${({ theme }) => theme.color.teal};\n  font-size: 18px;\n  flex-grow: 0.2;\n  transition: 2s, transform 1s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.lightTeal};\n    transform: scale(1.1);\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-basis: 100%;\n    margin: 20px 0;\n    padding: 10px;\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport { StyledForm, Button, Input } from \"./styled\";\n\nexport const Form = ({ addNewTask }) => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const inputFocus = () => {\n    inputRef.current.focus();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    if (newTaskContent.trim() === \"\") {\n      return;\n    }\n    addNewTask(newTaskContent.trim());\n    setNewTaskContent(\"\");\n    inputFocus();\n  };\n  return (\n    <StyledForm onSubmit={onFormSubmit}>\n      <Input\n        value={newTaskContent}\n        onChange={({ target }) => setNewTaskContent(target.value)}\n        placeholder=\"Co jest do zrobienia\"\n        ref={inputRef}\n      />\n      <Button>Dodaj zadanie</Button>\n    </StyledForm>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n  margin-bottom: 10px;\n`;\n\nexport const StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({theme}) =>theme.color.white};\n  padding-right: 10px;\n  margin: 0 0 1px 0;\n\n  @media (max-width:  ${({theme}) =>theme.breakpoint.horizontal}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  padding: 15px 17px;\n  font-size: 25px;\n  margin: 0px;\n`;\n","import React from \"react\";\nimport { StyledSection, StyledHeaderContainer, StyledTitle } from \"./styled\";\n\nexport const Section = ({ title, body, extraHeaderContent }) => {\n  return (\n    <StyledSection>\n      <StyledHeaderContainer>\n        <StyledTitle>{title}</StyledTitle>\n        {extraHeaderContent}\n      </StyledHeaderContainer>\n      {body}\n    </StyledSection>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.main`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 30px;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledButtons = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Button = styled.button`\n  color: teal;\n  font-size: 18px;\n  background-color: ${({ theme }) => theme.color.white};\n  border: none;\n  transition: 0.5s;\n\n  &:hover {\n    color: ${({ theme }) => theme.color.lightTeal};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.color.darkTeal};\n  }\n  &:disabled {\n    color: ${({ theme }) => theme.color.gallery};\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-basis: 100%;\n    margin: 10px 0;\n  }\n`;\n","import React from \"react\";\nimport { Button, StyledButtons } from \"./styled\";\n\nexport const Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\n  <StyledButtons>\n    {tasks.length > 0 && (\n      <>\n        <Button onClick={toggleHideDone}>\n          {hideDone ? \"Pokaz\" : \"Ukryj\"} ukończone\n        </Button>\n        <Button onClick={setAllDone} disabled={tasks.every(({ done }) => done)}>\n          Ukończ wszystkie\n        </Button>\n      </>\n    )}\n  </StyledButtons>\n);\n","import styled, { css } from \"styled-components\";\n\nexport const StyledTasks = styled.ul`\n  background-color: ${({ theme }) => theme.color.white};\n  padding: 15px;\n  list-style-type: none;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  margin: 12px;\n  padding-bottom: 10px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.color.lightGray};\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `}\n`;\n\nexport const TasksButton = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  color: ${({ theme }) => theme.color.white};\n  border: none;\n  padding: 5px;\n  width: 28px;\n  height: 28px;\n  transition: 0.5s;\n\n  ${({ remove }) =>\n    remove &&\n    css`\n      background-color: ${({ theme }) => theme.color.red};\n    `}\n  ${({ toggleDone }) =>\n    toggleDone &&\n    css`\n      background-color: ${({ theme }) => theme.color.green};\n    `}\n`;\n\nexport const Content = styled.p`\n  margin: 0;\n  flex-basis: 100%;\n  padding: 0 15px;\n  word-break: break-word;\n\n  ${({ done }) =>\n    done &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n","import React from \"react\";\nimport { StyledTasks, TasksButton, Item, Content } from \"./styled\";\nexport const Tasks = ({ tasks, hideDone, toggleTaskDone, removeTask }) => (\n  <StyledTasks>\n    {tasks.map((task) => (\n      <Item key={task.id} hidden={task.done && hideDone}>\n        <TasksButton toggleDone onClick={() => toggleTaskDone(task.id)}>\n          {task.done ? \"✔️\" : \"\"}\n        </TasksButton>\n        <Content done={task.done}>{task.content}</Content>\n        <TasksButton remove onClick={() => removeTask(task.id)}>\n          🗑\n        </TasksButton>\n      </Item>\n    ))}\n  </StyledTasks>\n);\n","import { useLocalStorageState } from \"./useLocalStorageState\";\n\nexport const useTasks = () => {\n  const [tasks, setTasks] = useLocalStorageState(\"tasks\", []);\n\n  const removeTask = (id) => {\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks((tasks) =>\n      tasks.map((task) => {\n        if (task.id === id) {\n          return {\n            ...task,\n            done: !task.done,\n          };\n        }\n        return task;\n      })\n    );\n  };\n\n  const setAllDone = () => {\n    setTasks((tasks) =>\n      tasks.map((task) => ({\n        ...task,\n        done: true,\n      }))\n    );\n  };\n  const addNewTask = (content) => {\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n  return {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useLocalStorageState = (keyName, initialValue) => {\n  const getInitialValue = () => {\n    const localStorageValue = localStorage.getItem(keyName);\n    if (localStorageValue === null) {\n      return initialValue;\n    }\n    return JSON.parse(localStorage.getItem(keyName));\n  };\n\n  const [state, setState] = useState(getInitialValue);\n\n  useEffect(() => {\n    localStorage.setItem(keyName, JSON.stringify(state));\n  }, [keyName, state]);\n\n  return [state, setState];\n};","import React, { useState } from \"react\";\nimport { Header } from \"./Header/Header\";\nimport { Form } from \"./Form/Form\";\nimport { Section } from \"./Section/Section\";\nimport { StyledContainer } from \"./Container/styled\";\nimport { Buttons } from \"./Buttons/Buttons\";\nimport { Tasks } from \"./Task/Tasks\";\nimport { useTasks } from \"./useTasks\";\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n \n  const toggleHideDone = () => {\n    setHideDone((hideDone) => !hideDone);\n  };\n\n const {\n   tasks,\n   removeTask, \n   toggleTaskDone,\n   setAllDone,\n   addNewTask\n } = useTasks();\n\n  return (\n    <StyledContainer>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadań\"\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n      />\n    </StyledContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <ThemeProvider theme={theme}>\n  <GlobalStyle/>\n    <App />\n  </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n  color: {\n    gallery: \"#ccc\",\n    lightGray: \"#ddd\",\n    lightTeal: \"hsl(180, 100%, 40%)\",\n    darkTeal: \"hsl(180, 100%, 15%)\",\n    teal: \"#008080\",\n    white: \"#fff\",\n    gray: \"#808080\",\n    black: \"#000\",\n    red: \"#FF0000\",\n    green: \"#0D9658\",\n  },\n  breakpoint: {\n    mobile: 767,\n    horizontal: 768,\n  },\n};\n"],"sourceRoot":""}