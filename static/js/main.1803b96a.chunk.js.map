{"version":3,"sources":["GlobalStyle.js","common/Header/styled.js","common/Header/Header.js"," features/tasks/TasksPage/Form/styled.js"," features/tasks/tasksLocalStorage.js"," features/tasks/tasksSlice.js"," features/tasks/TasksPage/Form/Form.js","common/Section/styled.js","common/Section/Section.js","common/Container/styled.js"," features/tasks/TasksPage/Buttons/styled.js"," features/tasks/TasksPage/Buttons/Buttons.js"," features/tasks/TasksPage/TaskList/styled.js","routes.js"," features/tasks/queryParameters.js"," features/tasks/TasksPage/searchQueryParamName.js"," features/tasks/TasksPage/TaskList/TaskList.js"," features/tasks/TasksPage/ApiButton/index.js"," features/tasks/TasksPage/Search/index.js"," features/tasks/TasksPage/index.js"," features/tasks/TaskPage/index.js"," features/author/Author.js","Navigation/styled.js","Navigation/index.js","App.js","reportWebVitals.js"," features/tasks/getExampleTasks.js"," features/tasks/tasksSaga.js","rootSaga.js","store.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","Name","styled","h1","theme","color","black","Header","title","StyledForm","form","white","breakpoint","horizontal","Input","input","gray","props","searchInput","css","Button","button","teal","lightTeal","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","parse","getItem","hideDone","loading","reducers","addTask","task","payload","push","toggleHideDone","state","toggleTaskDone","taskId","index","findIndex","id","done","setAllDone","removeTask","splice","fetchExampleTasks","setTasks","actions","selectHideDone","selectTasksState","selectLoading","selectTasks","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","trim","current","focus","content","nanoid","value","onChange","target","placeholder","ref","StyledSection","section","StyledHeaderContainer","div","gallery","StyledTitle","h2","Section","body","extraHeaderContent","sampleTasks","StyledContainer","main","StyledButtons","darkTeal","Buttons","useSelector","length","onClick","disabled","every","StyledTasks","ul","Item","li","lightGray","hidden","TasksButton","remove","red","toggleDone","green","Content","p","StyledLink","Link","toTask","useQueryParameter","key","location","useLocation","URLSearchParams","search","get","searchQueryParamName","TaskList","query","filter","toUpperCase","includes","selectTasksByQuery","map","to","ApiButton","isdisabled","Search","replaceQueryParameter","history","useHistory","searchParams","set","delete","pathname","toString","useReplaceQueryParameter","undefined","TasksPage","TaskPage","useParams","find","getTaskById","Author","activeClassName","NavLink","attrs","List","StyledNav","nav","Navigation","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getExampleTasks","a","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTasksInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","takeLatest","type","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1803b96a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n\n}\n\n*, ::before, ::after {\n  box-sizing: inherit;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    background-color:#eee\n}\n\n`;","import styled from \"styled-components\";\n\nexport const Name = styled.h1`\n  color: ${({ theme }) => theme.color.black};\n  margin-top: 2px;\n  padding: 60px 0px 0px 0px;\n`;\n","import React from \"react\";\nimport { Name } from \"./styled\";\n\nexport const Header = ({ title }) => {\n  return <Name>{title}</Name>;\n};\n","import styled, { css }from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  background: ${({ theme }) => theme.color.white};\n  padding: 15px 15px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Input = styled.input`\n  flex-grow: 0.8;\n  padding: 10px;\n  height: 40px;\n  margin-right: 10px;\n  border: 1px solid ${({ theme }) => theme.color.gray};\n  padding: 0px 10px;\n\n  ${(props) => props.searchInput && css`\n  flex-grow: 1;`}\n`;\n\nexport const Button = styled.button`\n  color: ${({ theme }) => theme.color.white};\n  border: 1px solid ${({ theme }) => theme.color.teal};\n  background: ${({ theme }) => theme.color.teal};\n  font-size: 18px;\n  flex-grow: 0.2;\n  transition: 2s, transform 1s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.lightTeal};\n    transform: scale(1.1);\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-basis: 100%;\n    margin: 20px 0;\n    padding: 10px;\n  }\n`;\n","const localStorageKey = \"tasks\";\n\nexport const saveTasksInLocalStorage = tasks =>\n  localStorage.setItem(localStorageKey, JSON.stringify(tasks));\n\nexport const getTasksFromLocalStorage = () => \n  JSON.parse(localStorage.getItem(localStorageKey)) || [];\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getTasksFromLocalStorage } from \"./tasksLocalStorage\";\n\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    tasks: getTasksFromLocalStorage(),\n    hideDone: false,\n    loading: false,\n  },\n  reducers: {\n    addTask: ({ tasks }, { payload: task }) => {\n      tasks.push(task);\n    },\n    toggleHideDone: (state) => {\n      state.hideDone = !state.hideDone;\n    },\n    toggleTaskDone: ({ tasks }, { payload: taskId }) => {\n      const index = tasks.findIndex(({ id }) => id === taskId);\n      tasks[index].done = !tasks[index].done;\n    },\n    setAllDone: ({ tasks }) => {\n      for (const task of tasks) {\n        task.done = true;\n      }\n    },\n    removeTask: ({ tasks }, { payload }) => {\n      const index = tasks.findIndex(({ id }) => id === payload);\n      tasks.splice(index, 1);\n    },\n    fetchExampleTasks: (state) => {\n      state.loading = true;\n    },\n\n    setTasks: (state, { payload: tasks }) => {\n      state.tasks = tasks;\n      state.loading = false;\n    },\n  },\n});\nexport const {\n  addTask,\n  toggleHideDone,\n  toggleTaskDone,\n  setAllDone,\n  removeTask,\n  fetchExampleTasks,\n  setTasks,\n} = tasksSlice.actions;\n\nexport const selectHideDone = (state) => selectTasksState(state).hideDone;\nexport const selectLoading = (state) => selectTasksState(state).loading;\nexport const getTaskById = (state, taskId) =>\n  selectTasks(state).find(({ id }) => id === taskId);\nexport const selectTasksState = (state) => state.tasks;\nexport const selectTasks = (state) => selectTasksState(state).tasks;\n\nexport const selectTasksByQuery = (state, query) => {\n  const tasks = selectTasks(state);\n\n  if (!query || query.trim() === \"\") {\n    return tasks;\n  }\n  return tasks.filter(({ content }) =>\n    content.toUpperCase().includes(query.trim().toUpperCase())\n  );\n};\nexport default tasksSlice.reducer;\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { StyledForm, Button, Input } from \"./styled\";\nimport { addTask } from \"../../tasksSlice\";\n\nexport const Form = () => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const inputRef = useRef(null);\n  const inputFocus = () => {\n    inputRef.current.focus();\n  };\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    if (newTaskContent.trim() === \"\") {\n      return;\n    }\n    setNewTaskContent(\"\");\n    inputFocus();\n    dispatch(\n      addTask({\n        content: newTaskContent.trim(),\n        done: false,\n        id: nanoid(),\n      })\n    );\n  };\n  return (\n    <StyledForm onSubmit={onFormSubmit}>\n      <Input\n        value={newTaskContent}\n        onChange={({ target }) => setNewTaskContent(target.value)}\n        placeholder=\"Co jest do zrobienia\"\n        ref={inputRef}\n      />\n      <Button>Dodaj zadanie</Button>\n    </StyledForm>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n  margin-bottom: 5px;\n  padding: 15px;\n  background-color: ${({ theme }) => theme.color.white};\n`;\n\nexport const StyledHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({ theme }) => theme.color.white};\n  padding: 0px 0px 5px 0px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid ${({ theme }) => theme.color.gallery};\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  padding: 15px 17px;\n  font-size: 25px;\n  margin: 0px;\n`;\n","import React from \"react\";\nimport { StyledSection, StyledHeaderContainer, StyledTitle } from \"./styled\";\n\nexport const Section = ({ title, body, extraHeaderContent, sampleTasks }) => {\n  return (\n    <StyledSection>\n      <StyledHeaderContainer>\n        <StyledTitle>{title}</StyledTitle>\n        {sampleTasks}\n        {extraHeaderContent}\n      </StyledHeaderContainer>\n      {body}\n    </StyledSection>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.main`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 30px;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledButtons = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Button = styled.button`\n  color: teal;\n  font-size: 18px;\n  background-color: ${({ theme }) => theme.color.white};\n  border: none;\n  transition: 0.5s;\n\n  &:hover {\n    color: ${({ theme }) => theme.color.lightTeal};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.color.darkTeal};\n  }\n  &:disabled {\n    color: ${({ theme }) => theme.color.gallery};\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    flex-basis: 100%;\n    margin: 10px 0;\n  }\n`;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectTasksState,\n  toggleHideDone,\n  setAllDone,\n  selectHideDone,\n} from \"../../tasksSlice\";\nimport { Button, StyledButtons } from \"./styled\";\n\nexport const Buttons = () => {\n  const { tasks } = useSelector(selectTasksState);\n  const { hideDone } = useSelector(selectHideDone);\n  const dispatch = useDispatch();\n\n  return (\n    <StyledButtons>\n      {tasks.length > 0 && (\n        <>\n          <Button onClick={() => dispatch(toggleHideDone())}>\n            {hideDone ? \"Pokaz\" : \"Ukryj\"} ukończone\n          </Button>\n          <Button\n            onClick={() => dispatch(setAllDone())}\n            disabled={tasks.every(({ done }) => done)}\n          >\n            Ukończ wszystkie\n          </Button>\n        </>\n      )}\n    </StyledButtons>\n  );\n};\n","import styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledTasks = styled.ul`\n  background-color: ${({ theme }) => theme.color.white};\n  padding: 15px;\n  list-style-type: none;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  margin: 12px;\n  padding-bottom: 10px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.color.lightGray};\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `}\n`;\n\nexport const TasksButton = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  color: ${({ theme }) => theme.color.white};\n  border: none;\n  padding: 5px;\n  width: 28px;\n  height: 28px;\n  transition: 0.5s;\n\n  ${({ remove }) =>\n    remove &&\n    css`\n      background-color: ${({ theme }) => theme.color.red};\n    `}\n  ${({ toggleDone }) =>\n    toggleDone &&\n    css`\n      background-color: ${({ theme }) => theme.color.green};\n    `}\n`;\n\nexport const Content = styled.p`\n  margin: 0;\n  flex-basis: 100%;\n  padding: 0 15px;\n  word-break: break-word;\n\n  ${({ done }) =>\n    done &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-size: 17px;\n  color: ${({ theme }) => theme.color.darkTeal};\n  transition: 0.5s;\n  &:hover {\n    filter: brightness(185%);\n  }\n  &:active {\n    filter: brightness(130%);\n  }\n`;\n","export const toTask = ({ id } = { id: \":id\" }) => `/zadania/${id}`;\nexport const toTasks = () => \"/zadania\";\nexport const toAuthor = () => \"/autor\";\n","import { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useQueryParameter = (key) => {\n    const location = useLocation();\n    return (\n        (new URLSearchParams(location.search)).get(key)\n    );\n};\n\nexport const useReplaceQueryParameter = () => {\n    const location = useLocation();\n    const history = useHistory();\n\n    return ({ key, value }) => {\n        const searchParams = new URLSearchParams(location.search);\n\n        if (!value) {\n            searchParams.delete(key);\n        } else {\n            searchParams.set(key, value);\n        }\n\n        history.push(`${location.pathname}?${searchParams.toString()}`)\n    };\n};\n","export const searchQueryParamName = \"szukaj\";\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { StyledTasks, TasksButton, Item, Content, StyledLink} from \"./styled\";\nimport {\n  selectHideDone,\n  toggleTaskDone,\n  removeTask,\n  selectTasksByQuery,\n} from \"../../tasksSlice\";\nimport { toTask } from \"../../../../routes\";\nimport { useQueryParameter } from \"./../../queryParameters\";\nimport { searchQueryParamName } from \"./../searchQueryParamName\";\n\n\nexport const TaskList = () => {\n  const query = useQueryParameter(searchQueryParamName);\n  const tasks = useSelector((state) => selectTasksByQuery(state, query));\n  const hideDone = useSelector(selectHideDone);\n  const dispatch = useDispatch();\n\n  return (\n    <StyledTasks>\n      {tasks.map((task) => (\n        <Item key={task.id} hidden={task.done && hideDone}>\n          <TasksButton\n            toggleDone\n            onClick={() => dispatch(toggleTaskDone(task.id))}\n          >\n            {task.done ? \"✔️\" : \"\"}\n          </TasksButton>\n          <Content done={task.done}>\n            <StyledLink to={toTask({ id: task.id })}>{task.content}</StyledLink>\n          </Content>\n          <TasksButton remove onClick={() => dispatch(removeTask(task.id))}>\n            🗑\n          </TasksButton>\n        </Item>\n      ))}\n    </StyledTasks>\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"../Buttons/styled\";\nimport { fetchExampleTasks, selectLoading } from \"../../tasksSlice\";\n\nexport const ApiButton = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectLoading);\n\n  return (\n    <Button isdisabled={loading} onClick={() => dispatch(fetchExampleTasks())}>\n      {loading ? \"loading...\" : \"Pokaż przykładowe zadania\"}\n    </Button>\n  );\n};\n","import { Input } from \"./../Form/styled\";\nimport { StyledForm } from \"./../Form/styled\";\nimport { searchQueryParamName } from \"./../searchQueryParamName\";\nimport {\n  useQueryParameter,\n  useReplaceQueryParameter,\n} from \"./../../queryParameters\";\n\nexport const Search = () => {\n  const query = useQueryParameter(searchQueryParamName);\n  const replaceQueryParameter = useReplaceQueryParameter();\n\n  const onInputChange = ({ target }) => {\n    replaceQueryParameter({\n      key: searchQueryParamName,\n      value: target.value.trim() !== \"\" ? target.value : undefined,\n    });\n  };\n\n  return (\n    <StyledForm>\n      <Input searchInput\n        placeholder=\"Filtruj zadania\"\n        value={query || \"\"}\n        onChange={onInputChange}\n      />\n    </StyledForm>\n  );\n};\n","import { Header } from \"../../../common/Header/Header\";\nimport { Form } from \"./Form/Form\";\nimport { Section } from \"../../../common/Section/Section\";\nimport { StyledContainer } from \"../../../common/Container/styled\";\nimport { Buttons } from \"./Buttons/Buttons\";\nimport { TaskList } from \"./TaskList/TaskList\";\nimport  { ApiButton }from \"./ApiButton/index\";\nimport { Search } from \"./Search/index\";\n\nexport const TasksPage = () => {\n  return (\n    <StyledContainer>\n      <Header title=\"Lista zadań\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        sampleTasks={<ApiButton />}\n        body={<Form />}\n      />\n        <Section\n        title=\"Wyszukiwarka\"\n        body={<Search />}\n      />\n\n      <Section\n        title=\"Lista zadań\"\n        extraHeaderContent={<Buttons />}\n        body={<TaskList />}\n      />\n    </StyledContainer>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"../../../common/Header/Header\";\nimport { Section } from \"../../../common/Section/Section\";\nimport { StyledContainer } from \"./../../../common/Container/styled\";\nimport { useParams } from \"react-router-dom\";\nimport { getTaskById } from \"../tasksSlice\";\nimport { useSelector } from \"react-redux\";\n\nexport const TaskPage = () => {\n  const { id } = useParams();\n  const task = useSelector((state) => getTaskById(state, id));\n\n  return (\n    <StyledContainer>\n      <Header title=\"Szczegóły zadania\" />\n      <Section\n        title={task ? task.content : \"Nie znaleziono zadania!\"}\n        body={\n          task && (\n            <>\n              <strong>Ukończono:</strong> {task.done ? \"tak\" : \"nie\"}\n            </>\n          )\n        }\n      />\n    </StyledContainer>\n  );\n};\n","import { StyledContainer } from \"../../common/Container/styled\";\nimport { Header } from \"../../common/Header/Header\";\nimport { Section } from \"../../common/Section/Section\";\n\nexport const Author = () => (\n  <StyledContainer>\n    <Header title=\"O mnie\" />\n    <Section\n      title=\"Kinga Parasiewicz\"\n      body={\n        <>\n          <p>\n            Obecnie skończyłam studia na kierunku <strong>Filologia Włoska</strong>.\n          </p>\n          <p>Od października zaczynam studia podyplomowe na kierunku <strong> Cloud Solution Architect</strong>.</p>\n          <p>\n            Programowanie aplikacji webowych sprawia mi dużą frajdę i to w tym\n            kierunku chciałabym iść.\n          </p>\n          <p>\n            W wolnym czasie biegam, uprawiam rośliny, staram się spędzać czas na\n            świeżym powietrzu.\n          </p>\n        </>\n      }\n    />\n  </StyledContainer>\n);\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst activeClassName = \"link-active\";\n\nexport const StyledLink = styled(NavLink).attrs(() => ({ activeClassName }))`\n  &.${activeClassName} {\n    font-weight: bold;\n  }\n  \n  color: #fff;\n  text-decoration: none;\n  text-transform: uppercase;\n  &:hover{\n    border-bottom: 1px solid;\n  }\n`;\n\nexport const List = styled.ul`\n  text-align: center;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  list-style-type: none;\n  display: inline-block;\n  padding: 20px 40px;\n`;\n\nexport const StyledNav = styled.nav`\n  background-color: ${({ theme }) => theme.color.darkTeal};\n`;\n","import React from \"react\";\nimport { toAuthor, toTasks } from \"../routes\";\nimport { Item, List, StyledLink, StyledNav } from \"./styled\";\n\n\nexport const Navigation = () => (\n  <StyledNav>\n    <List>\n      <Item>\n        <StyledLink to={toTasks()}>\n          Zadania\n        </StyledLink>\n      </Item>\n      <Item>\n        <StyledLink to={toAuthor()}>\n          O autorze\n        </StyledLink>\n      </Item>\n    </List>\n  </StyledNav>\n)","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { TasksPage } from \"./ features/tasks/TasksPage/index\";\nimport { TaskPage } from \"./ features/tasks/TaskPage/index\";\nimport { Author } from \"./ features/author/Author\";\nimport { toTasks, toAuthor, toTask } from \"./routes\";\nimport { Navigation } from \"./Navigation/index\";\n\nexport const App = () => (\n  <HashRouter>\n    <Navigation />\n    <Switch>\n      <Route path={toTask()}>\n        <TaskPage />\n      </Route>\n      <Route path={toTasks()}>\n        <TasksPage />\n      </Route>\n      <Route path={toAuthor()}>\n        <Author />\n      </Route>\n      <Route>\n        <Redirect to={toTasks()} />\n      </Route>\n    </Switch>\n  </HashRouter>\n);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const getExampleTasks = async () => {\n  const response = await fetch(\"/todo-list-react/exampleTasks.json\");\n \n  if (!response.ok) {\n    new Error(response.statusText);\n  }\n  return await response.json();\n};\n","import {\n  takeEvery,\n  takeLatest,\n  call,\n  put,\n  delay,\n  select,\n} from \"redux-saga/effects\";\nimport { fetchExampleTasks, setTasks, selectTasks } from \"./tasksSlice\";\nimport { getExampleTasks } from \"./getExampleTasks\";\nimport { saveTasksInLocalStorage } from \"./tasksLocalStorage\";\n\nfunction* fetchExampleTasksHandler() {\n  try {\n    yield delay(1000);\n    const exampleTasks = yield call(getExampleTasks);\n    yield put(setTasks(exampleTasks));\n  } catch (error) {\n    yield call(alert, \"Coś poszło nie tak! Spróbuj później\");\n  }\n}\n\nfunction* saveTasksInLocalStorageHandler() {\n  const tasks = yield select(selectTasks);\n  yield call(saveTasksInLocalStorage, tasks);\n}\n\nexport function* tasksSaga() {\n  yield takeLatest(fetchExampleTasks.type, fetchExampleTasksHandler);\n  yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\n}\n","import { all } from \"redux-saga/effects\";\nimport { tasksSaga } from \"./ features/tasks/tasksSaga\";\n\nexport default function* rootSaga() {\n  yield all([\n    tasksSaga(),\n]);\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport tasksReducer from \"./ features/tasks/tasksSlice\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    tasks: tasksReducer,\n  },\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { theme } from \"./theme\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n  color: {\n    gallery: \"#ccc\",\n    lightGray: \"#ddd\",\n    lightTeal: \"hsl(180, 100%, 40%)\",\n    darkTeal: \"hsl(180, 100%, 15%)\",\n    teal: \"#008080\",\n    white: \"#fff\",\n    gray: \"#808080\",\n    black: \"#000\",\n    red: \"#FF0000\",\n    green: \"#0D9658\",\n  },\n  breakpoint: {\n    horizontal: 768,\n  },\n};\n"],"sourceRoot":""}